{"ast":null,"code":"import _classCallCheck from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tamara/Documents/scatterplot/client/src/App/DataVis/DataVis.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nvar DataVis =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataVis, _Component);\n\n  function DataVis() {\n    _classCallCheck(this, DataVis);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DataVis).apply(this, arguments));\n  }\n\n  _createClass(DataVis, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.drawCircles();\n    }\n  }, {\n    key: \"drawCircles\",\n    value: function drawCircles() {\n      d3.select(this.groupEl).selectAll(\"circle\").data(this.props.data).enter();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"g\", {\n        ref: function ref(el) {\n          return _this.groupEl = el;\n        },\n        class: \"test\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return DataVis;\n}(Component);\n\nexport default DataVis;","map":{"version":3,"sources":["/Users/tamara/Documents/scatterplot/client/src/App/DataVis/DataVis.js"],"names":["React","Component","d3","DataVis","drawCircles","select","groupEl","selectAll","data","props","enter","el"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;IAEMC,O;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,WAAL;AACD;;;kCAEa;AACZF,MAAAA,EAAE,CAACG,MAAH,CAAU,KAAKC,OAAf,EACGC,SADH,CACa,QADb,EAEGC,IAFH,CAEQ,KAAKC,KAAL,CAAWD,IAFnB,EAGGE,KAHH;AAKD;;;6BAEQ;AAAA;;AACP,aACE;AAAG,QAAA,GAAG,EAAE,aAAAC,EAAE;AAAA,iBAAI,KAAI,CAACL,OAAL,GAAeK,EAAnB;AAAA,SAAV;AAAiC,QAAA,KAAK,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EAjBmBV,S;;AAqBtB,eAAeE,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nclass DataVis extends Component {\n  componentDidMount() {\n    this.drawCircles()\n  }\n\n  drawCircles() {\n    d3.select(this.groupEl)\n      .selectAll(\"circle\")\n      .data(this.props.data)\n      .enter()\n\n  }\n\n  render() {\n    return (\n      <g ref={el => this.groupEl = el} class=\"test\"></g>\n    );\n  }\n\n}\n\nexport default DataVis;"]},"metadata":{},"sourceType":"module"}