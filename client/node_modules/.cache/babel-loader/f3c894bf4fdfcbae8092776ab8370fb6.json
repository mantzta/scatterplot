{"ast":null,"code":"import _classCallCheck from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tamara/Documents/scatterplot/client/src/App/Regression/Regression.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport regression from 'regression';\n\nvar Regression =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Regression, _Component);\n\n  function Regression(props) {\n    var _this;\n\n    _classCallCheck(this, Regression);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Regression).call(this, props));\n    _this.pathRef = React.createRef();\n    _this.degree = 3;\n    return _this;\n  }\n\n  _createClass(Regression, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.drawRegression(this.props.data);\n    }\n  }, {\n    key: \"predictY\",\n    value: function predictY(coefficients, x) {\n      var y = 0;\n\n      for (var i = 0; i < coefficients.length; i++) {\n        y += Math.pow(x, i) * coefficients[i];\n      }\n\n      return y;\n    }\n  }, {\n    key: \"drawRegression\",\n    value: function drawRegression(dataset) {\n      var xScale = d3.scaleLinear().domain([0, this.props.maxX]).range([this.props.padding, this.props.width - this.props.padding]);\n      var yScale = d3.scaleLinear().domain([0, this.props.maxY]).range([this.props.height - this.props.padding, this.props.padding]);\n      var coefficients = regression.polynomial(dataset, {\n        order: this.degree\n      });\n      var lineGenerator = d3.line().x(function (d) {\n        return xScale(d.x);\n      }).y(function (d) {\n        return yScale(this.predictY(coefficients, d.x));\n      }).curve(d3.curveBasis);\n      var pathData = lineGenerator(dataset);\n      d3.select(this.pathRef.current).attr(\"class\", \"line\").attr(\"d\", pathData).attr(\"stroke\", \"black\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"path\", {\n        ref: this.pathRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Regression;\n}(Component);\n\nexport default Regression;","map":{"version":3,"sources":["/Users/tamara/Documents/scatterplot/client/src/App/Regression/Regression.js"],"names":["React","Component","d3","regression","Regression","props","pathRef","createRef","degree","drawRegression","data","coefficients","x","y","i","length","Math","pow","dataset","xScale","scaleLinear","domain","maxX","range","padding","width","yScale","maxY","height","polynomial","order","lineGenerator","line","d","predictY","curve","curveBasis","pathData","select","current","attr"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;IAEMC,U;;;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;AACA,UAAKC,OAAL,GAAeN,KAAK,CAACO,SAAN,EAAf;AACA,UAAKC,MAAL,GAAc,CAAd;AAHiB;AAIlB;;;;wCAEmB;AAClB,WAAKC,cAAL,CAAoB,KAAKJ,KAAL,CAAWK,IAA/B;AACD;;;6BAEQC,Y,EAAcC,C,EAAG;AACxB,UAAIC,CAAC,GAAG,CAAR;;AAEA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,YAAY,CAACI,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3CD,QAAAA,CAAC,IAAIG,IAAI,CAACC,GAAL,CAASL,CAAT,EAAYE,CAAZ,IAAiBH,YAAY,CAACG,CAAD,CAAlC;AACD;;AAED,aAAOD,CAAP;AACD;;;mCAEcK,O,EAAS;AACtB,UAAIC,MAAM,GAAGjB,EAAE,CAACkB,WAAH,GACVC,MADU,CACH,CAAC,CAAD,EAAI,KAAKhB,KAAL,CAAWiB,IAAf,CADG,EAEVC,KAFU,CAEJ,CAAC,KAAKlB,KAAL,CAAWmB,OAAZ,EAAqB,KAAKnB,KAAL,CAAWoB,KAAX,GAAmB,KAAKpB,KAAL,CAAWmB,OAAnD,CAFI,CAAb;AAGA,UAAIE,MAAM,GAAGxB,EAAE,CAACkB,WAAH,GACVC,MADU,CACH,CAAC,CAAD,EAAI,KAAKhB,KAAL,CAAWsB,IAAf,CADG,EAEVJ,KAFU,CAEJ,CAAC,KAAKlB,KAAL,CAAWuB,MAAX,GAAoB,KAAKvB,KAAL,CAAWmB,OAAhC,EAAyC,KAAKnB,KAAL,CAAWmB,OAApD,CAFI,CAAb;AAIA,UAAMb,YAAY,GAAGR,UAAU,CAAC0B,UAAX,CAAsBX,OAAtB,EAA+B;AAAEY,QAAAA,KAAK,EAAE,KAAKtB;AAAd,OAA/B,CAArB;AACA,UAAMuB,aAAa,GAAG7B,EAAE,CAAC8B,IAAH,GACnBpB,CADmB,CACjB,UAAUqB,CAAV,EAAa;AACd,eAAOd,MAAM,CAACc,CAAC,CAACrB,CAAH,CAAb;AACD,OAHmB,EAInBC,CAJmB,CAIjB,UAAUoB,CAAV,EAAa;AACd,eAAOP,MAAM,CACV,KAAKQ,QAAL,CAAcvB,YAAd,EAA4BsB,CAAC,CAACrB,CAA9B,CADU,CAAb;AAGD,OARmB,EASnBuB,KATmB,CASbjC,EAAE,CAACkC,UATU,CAAtB;AAWA,UAAMC,QAAQ,GAAGN,aAAa,CAACb,OAAD,CAA9B;AAEAhB,MAAAA,EAAE,CAACoC,MAAH,CAAU,KAAKhC,OAAL,CAAaiC,OAAvB,EAAgCC,IAAhC,CAAqC,OAArC,EAA8C,MAA9C,EACGA,IADH,CACQ,GADR,EACaH,QADb,EACuBG,IADvB,CAC4B,QAD5B,EACsC,OADtC;AAED;;;6BAEQ;AACP,aACE;AAAM,QAAA,GAAG,EAAE,KAAKlC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EAnDsBL,S;;AAuDzB,eAAeG,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport regression from 'regression';\n\nclass Regression extends Component {\n  constructor(props) {\n    super(props);\n    this.pathRef = React.createRef();\n    this.degree = 3;\n  }\n\n  componentDidMount() {\n    this.drawRegression(this.props.data)\n  }\n\n  predictY(coefficients, x) {\n    let y = 0\n\n    for(let i = 0; i < coefficients.length; i++) {\n      y += Math.pow(x, i) * coefficients[i]\n    }\n\n    return y\n  }\n\n  drawRegression(dataset) {\n    let xScale = d3.scaleLinear()\n      .domain([0, this.props.maxX])\n      .range([this.props.padding, this.props.width - this.props.padding]);\n    let yScale = d3.scaleLinear()\n      .domain([0, this.props.maxY])\n      .range([this.props.height - this.props.padding, this.props.padding]);\n\n    const coefficients = regression.polynomial(dataset, { order: this.degree });\n    const lineGenerator = d3.line()\n      .x(function (d) {\n        return xScale(d.x);\n      })\n      .y(function (d) {\n        return yScale(\n          (this.predictY(coefficients, d.x))\n        );\n      })\n      .curve(d3.curveBasis);\n\n    const pathData = lineGenerator(dataset);\n\n    d3.select(this.pathRef.current).attr(\"class\", \"line\")\n      .attr(\"d\", pathData).attr(\"stroke\", \"black\");\n  }\n\n  render() {\n    return (\n      <path ref={this.pathRef}></path>\n    );\n  }\n\n}\n\nexport default Regression;"]},"metadata":{},"sourceType":"module"}