{"ast":null,"code":"import _classCallCheck from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tamara/Documents/scatterplot/client/src/App/Axis/Axis.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nvar Axis =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Axis, _Component);\n\n  function Axis() {\n    _classCallCheck(this, Axis);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Axis).apply(this, arguments));\n  }\n\n  _createClass(Axis, [{\n    key: \"getScale\",\n    value: function getScale(rangeStart, rangeEnd, max) {\n      return d3.scaleLinear().domain([0, max]).range([rangeStart, rangeEnd]);\n    }\n  }, {\n    key: \"getMax\",\n    value: function getMax(dimension, data) {\n      var max = [];\n      Array.from(data).forEach(function (set) {\n        max.push(d3.max(set, function (d) {\n          return d[dimension];\n        }));\n      });\n      return Math.max.apply(Math, max);\n    }\n  }, {\n    key: \"drawAxis\",\n    value: function drawAxis() {\n      var xScale = d3.scaleLinear().domain([0, this.getMax(\"x\", this.props.data)]).range([this.props.padding, this.props.width - this.props.padding]);\n      var yScale = d3.scaleLinear().domain([0, this.getMax(\"y\", this.props.data)]).range([this.props.height - this.props.padding, this.props.padding]);\n      var axis, xTranslate, yTranslate;\n      /* eslint-disable no-console */\n\n      console.log(xScale(10));\n\n      if (this.props.type === \"x\") {\n        axis = d3.axisBottom(xScale);\n        xTranslate = 0;\n        yTranslate = this.props.height - this.props.padding;\n      } else if (this.props.type === \"y\") {\n        axis = d3.axisLeft(yScale);\n        xTranslate = this.props.padding;\n        yTranslate = 0;\n      }\n\n      d3.select(this.groupEl).attr(\"transform\", \"translate(\".concat(xTranslate, \", \").concat(yTranslate, \")\")).call(axis);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      if (data.props.data) {\n        this.drawAxis();\n      }\n\n      return React.createElement(\"g\", {\n        ref: function ref(el) {\n          return _this.groupEl = el;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Axis;\n}(Component);\n\nexport default Axis;","map":{"version":3,"sources":["/Users/tamara/Documents/scatterplot/client/src/App/Axis/Axis.js"],"names":["React","Component","d3","Axis","rangeStart","rangeEnd","max","scaleLinear","domain","range","dimension","data","Array","from","forEach","set","push","d","Math","xScale","getMax","props","padding","width","yScale","height","axis","xTranslate","yTranslate","console","log","type","axisBottom","axisLeft","select","groupEl","attr","call","drawAxis","el"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;IAEMC,I;;;;;;;;;;;;;6BACKC,U,EAAYC,Q,EAAUC,G,EAAK;AAClC,aAAOJ,EAAE,CAACK,WAAH,GACJC,MADI,CACG,CAAC,CAAD,EAAIF,GAAJ,CADH,EAEJG,KAFI,CAEE,CAACL,UAAD,EAAaC,QAAb,CAFF,CAAP;AAGD;;;2BAEMK,S,EAAWC,I,EAAM;AACtB,UAAML,GAAG,GAAG,EAAZ;AAEAM,MAAAA,KAAK,CAACC,IAAN,CAAWF,IAAX,EAAiBG,OAAjB,CAAyB,UAAAC,GAAG,EAAI;AAC9BT,QAAAA,GAAG,CAACU,IAAJ,CAASd,EAAE,CAACI,GAAH,CAAOS,GAAP,EAAY,UAASE,CAAT,EAAY;AAAE,iBAAOA,CAAC,CAACP,SAAD,CAAR;AAAsB,SAAhD,CAAT;AACD,OAFD;AAGA,aAAOQ,IAAI,CAACZ,GAAL,OAAAY,IAAI,EAAQZ,GAAR,CAAX;AACD;;;+BAEU;AACT,UAAIa,MAAM,GAAGjB,EAAE,CAACK,WAAH,GACVC,MADU,CACH,CAAC,CAAD,EAAI,KAAKY,MAAL,MAAiB,KAAKC,KAAL,CAAWV,IAA5B,CAAJ,CADG,EAEVF,KAFU,CAEJ,CAAC,KAAKY,KAAL,CAAWC,OAAZ,EAAqB,KAAKD,KAAL,CAAWE,KAAX,GAAmB,KAAKF,KAAL,CAAWC,OAAnD,CAFI,CAAb;AAGA,UAAIE,MAAM,GAAGtB,EAAE,CAACK,WAAH,GACVC,MADU,CACH,CAAC,CAAD,EAAI,KAAKY,MAAL,MAAiB,KAAKC,KAAL,CAAWV,IAA5B,CAAJ,CADG,EAEVF,KAFU,CAEJ,CAAC,KAAKY,KAAL,CAAWI,MAAX,GAAoB,KAAKJ,KAAL,CAAWC,OAAhC,EAAyC,KAAKD,KAAL,CAAWC,OAApD,CAFI,CAAb;AAGA,UAAII,IAAJ,EAAUC,UAAV,EAAsBC,UAAtB;AAEA;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYX,MAAM,CAAC,EAAD,CAAlB;;AAEA,UAAI,KAAKE,KAAL,CAAWU,IAAX,QAAJ,EAA6B;AAC3BL,QAAAA,IAAI,GAAGxB,EAAE,CAAC8B,UAAH,CAAcb,MAAd,CAAP;AACAQ,QAAAA,UAAU,GAAG,CAAb;AACAC,QAAAA,UAAU,GAAG,KAAKP,KAAL,CAAWI,MAAX,GAAoB,KAAKJ,KAAL,CAAWC,OAA5C;AACD,OAJD,MAIO,IAAI,KAAKD,KAAL,CAAWU,IAAX,QAAJ,EAA6B;AAClCL,QAAAA,IAAI,GAAGxB,EAAE,CAAC+B,QAAH,CAAYT,MAAZ,CAAP;AACAG,QAAAA,UAAU,GAAG,KAAKN,KAAL,CAAWC,OAAxB;AACAM,QAAAA,UAAU,GAAG,CAAb;AACD;;AAED1B,MAAAA,EAAE,CAACgC,MAAH,CAAU,KAAKC,OAAf,EACGC,IADH,kCACkCT,UADlC,eACiDC,UADjD,QAEGS,IAFH,CAEQX,IAFR;AAGD;;;6BAEQ;AAAA;;AACP,UAAIf,IAAI,CAACU,KAAL,CAAWV,IAAf,EAAqB;AACnB,aAAK2B,QAAL;AACD;;AACD,aACE;AAAG,QAAA,GAAG,EAAE,aAAAC,EAAE;AAAA,iBAAI,KAAI,CAACJ,OAAL,GAAeI,EAAnB;AAAA,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EAlDgBtC,S;;AAsDnB,eAAeE,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nclass Axis extends Component {\n  getScale(rangeStart, rangeEnd, max) {\n    return d3.scaleLinear()\n      .domain([0, max])\n      .range([rangeStart, rangeEnd]);\n  }\n\n  getMax(dimension, data) {\n    const max = []\n\n    Array.from(data).forEach(set => {\n      max.push(d3.max(set, function(d) { return d[dimension]; }))\n    });\n    return Math.max(...max)\n  }\n\n  drawAxis() {\n    var xScale = d3.scaleLinear()\n      .domain([0, this.getMax(`x`, this.props.data)])\n      .range([this.props.padding, this.props.width - this.props.padding]);\n    var yScale = d3.scaleLinear()\n      .domain([0, this.getMax(`y`, this.props.data)])\n      .range([this.props.height - this.props.padding, this.props.padding]);\n    let axis, xTranslate, yTranslate\n\n    /* eslint-disable no-console */\n    console.log(xScale(10))\n\n    if (this.props.type === `x`) {\n      axis = d3.axisBottom(xScale)\n      xTranslate = 0\n      yTranslate = this.props.height - this.props.padding\n    } else if (this.props.type === `y`) {\n      axis = d3.axisLeft(yScale)\n      xTranslate = this.props.padding\n      yTranslate = 0\n    }\n\n    d3.select(this.groupEl)\n      .attr(`transform`, `translate(${xTranslate}, ${yTranslate})`)\n      .call(axis);\n  }\n\n  render() {\n    if (data.props.data) {\n      this.drawAxis()\n    }\n    return (\n      <g ref={el => this.groupEl = el}></g>\n    );\n  }\n\n}\n\nexport default Axis;"]},"metadata":{},"sourceType":"module"}