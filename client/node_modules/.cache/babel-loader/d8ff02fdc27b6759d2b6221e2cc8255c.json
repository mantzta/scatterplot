{"ast":null,"code":"import _classCallCheck from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tamara/Documents/scatterplot/client/src/App/ScatterPlot/ScatterPlot.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport Axis from \"../Axis/Axis\";\nimport DataVis from \"../DataVis/DataVis\";\nimport Regression from \"../Regression/Regression\";\n\nvar ScatterPlot =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScatterPlot, _Component);\n\n  function ScatterPlot(props) {\n    var _this;\n\n    _classCallCheck(this, ScatterPlot);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScatterPlot).call(this, props));\n    _this.height = 400;\n    _this.padding = 30;\n    _this.width = 400;\n\n    if (Object.entries(_this.props.data).length !== 0) {\n      _this.maxX = _this.getMax(\"x\", _this.props.data);\n      _this.maxY = _this.getMax(\"y\", _this.props.data);\n    }\n\n    return _this;\n  }\n\n  _createClass(ScatterPlot, [{\n    key: \"getMax\",\n    value: function getMax(dimension, data) {\n      var max = [];\n      Object.entries(data).forEach(function (set) {\n        max.push(d3.max(set[1], function (d) {\n          return d[dimension];\n        }));\n      });\n      return d3.max(max);\n    }\n  }, {\n    key: \"drawScatterPlot\",\n    value: function drawScatterPlot() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (Object.entries(this.props.data).length !== 0) {\n        return React.createElement(\"svg\", {\n          width: this.width,\n          height: this.height,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(Axis, {\n          scale: this.xScale,\n          dimension: \"x\",\n          height: this.height,\n          padding: this.padding,\n          width: this.width,\n          maxX: this.maxX,\n          maxY: this.maxY,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }), React.createElement(Axis, {\n          scale: this.yScale,\n          dimension: \"y\",\n          height: this.height,\n          padding: this.padding,\n          width: this.width,\n          maxX: this.maxX,\n          maxY: this.maxY,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }), React.createElement(DataVis, {\n          data: this.props.data.dataset1,\n          maxX: this.maxX,\n          maxY: this.maxY,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }), React.createElement(DataVis, {\n          data: this.props.data.dataset2,\n          maxX: this.maxX,\n          maxY: this.maxY,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }), React.createElement(DataVis, {\n          data: this.props.data.dataset3,\n          maxX: this.maxX,\n          maxY: this.maxY,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }), React.createElement(Regression, {\n          data: this.props.data.dataset1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }), React.createElement(Regression, {\n          data: this.props.data.dataset2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }), React.createElement(Regression, {\n          data: this.props.data.dataset3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"svg\", {\n        width: this.width,\n        height: this.height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Axis, {\n        scale: this.xScale,\n        dimension: \"x\",\n        height: this.height,\n        padding: this.padding,\n        width: this.width,\n        maxX: this.maxX,\n        maxY: this.maxY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Axis, {\n        scale: this.yScale,\n        dimension: \"y\",\n        height: this.height,\n        padding: this.padding,\n        width: this.width,\n        maxX: this.maxX,\n        maxY: this.maxY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(DataVis, {\n        data: this.props.data.dataset1,\n        maxX: this.maxX,\n        maxY: this.maxY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(DataVis, {\n        data: this.props.data.dataset2,\n        maxX: this.maxX,\n        maxY: this.maxY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(DataVis, {\n        data: this.props.data.dataset3,\n        maxX: this.maxX,\n        maxY: this.maxY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Regression, {\n        data: this.props.data.dataset1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Regression, {\n        data: this.props.data.dataset2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Regression, {\n        data: this.props.data.dataset3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ScatterPlot;\n}(Component);\n\nexport default ScatterPlot;","map":{"version":3,"sources":["/Users/tamara/Documents/scatterplot/client/src/App/ScatterPlot/ScatterPlot.js"],"names":["React","Component","d3","Axis","DataVis","Regression","ScatterPlot","props","height","padding","width","Object","entries","data","length","maxX","getMax","maxY","dimension","max","forEach","set","push","d","xScale","yScale","dataset1","dataset2","dataset3"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport Axis from \"../Axis/Axis\"\nimport DataVis from \"../DataVis/DataVis\"\nimport Regression from \"../Regression/Regression\"\n\nclass ScatterPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.height = 400;\n    this.padding  = 30;\n    this.width= 400;\n    if (Object.entries(this.props.data).length !== 0) {\n      this.maxX = this.getMax(`x`, this.props.data)\n      this.maxY = this.getMax(`y`, this.props.data)\n    }\n  }\n\n  getMax(dimension, data) {\n    const max = []\n\n    Object.entries(data).forEach(set => {\n      max.push(d3.max(set[1], function(d) { return d[dimension]; }))\n    });\n\n    return d3.max(max)\n  }\n\n  drawScatterPlot() {\n\n  }\n\n\n\n  render() {\n    if (Object.entries(this.props.data).length !== 0) {\n      return (\n        <svg width={this.width} height={this.height}>\n        <Axis scale={this.xScale} dimension=\"x\" height={this.height} padding={this.padding} width={this.width} maxX={this.maxX} maxY={this.maxY} />\n        <Axis scale={this.yScale} dimension=\"y\" height={this.height} padding={this.padding} width={this.width} maxX={this.maxX} maxY={this.maxY} />\n        <DataVis data={this.props.data.dataset1} maxX={this.maxX} maxY={this.maxY} />\n        <DataVis data={this.props.data.dataset2} maxX={this.maxX} maxY={this.maxY} />\n        <DataVis data={this.props.data.dataset3} maxX={this.maxX} maxY={this.maxY} />\n        <Regression data={this.props.data.dataset1} />\n        <Regression data={this.props.data.dataset2} />\n        <Regression data={this.props.data.dataset3} />\n      </svg>\n      );\n    }\n    return (\n      <svg width={this.width} height={this.height}>\n        <Axis scale={this.xScale} dimension=\"x\" height={this.height} padding={this.padding} width={this.width} maxX={this.maxX} maxY={this.maxY} />\n        <Axis scale={this.yScale} dimension=\"y\" height={this.height} padding={this.padding} width={this.width} maxX={this.maxX} maxY={this.maxY} />\n        <DataVis data={this.props.data.dataset1} maxX={this.maxX} maxY={this.maxY} />\n        <DataVis data={this.props.data.dataset2} maxX={this.maxX} maxY={this.maxY} />\n        <DataVis data={this.props.data.dataset3} maxX={this.maxX} maxY={this.maxY} />\n        <Regression data={this.props.data.dataset1} />\n        <Regression data={this.props.data.dataset2} />\n        <Regression data={this.props.data.dataset3} />\n      </svg>\n    );\n  }\n}\n\nexport default ScatterPlot;"]},"metadata":{},"sourceType":"module"}