{"ast":null,"code":"import _classCallCheck from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tamara/Documents/scatterplot/client/src/App/DataVisulisation/DataVisulisation.js\";\nimport React, { Component } from \"react\";\nimport * as d3 from \"d3\";\n\nvar DataVisulisation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataVisulisation, _Component);\n\n  function DataVisulisation(props) {\n    var _this;\n\n    _classCallCheck(this, DataVisulisation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataVisulisation).call(this, props));\n    _this.groupRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(DataVisulisation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.drawCircles();\n    }\n  }, {\n    key: \"drawCircles\",\n    value: function drawCircles() {\n      var scales = this.props.scalesInstance.getScales();\n      var dataVis = d3.select(this.groupRef.current);\n      dataVis.selectAll(\"circle\").data(this.props.data).enter().append(\"circle\").attr(\"cx\", function (d) {\n        return scales.x(d.x);\n      }).attr(\"cy\", function (d) {\n        return scales.y(d.y);\n      }).attr(\"r\", 3).attr(\"fill\", this.props.color);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"g\", {\n        ref: this.groupRef,\n        className: \"group__\".concat(this.props.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return DataVisulisation;\n}(Component);\n\nexport default DataVisulisation;","map":{"version":3,"sources":["/Users/tamara/Documents/scatterplot/client/src/App/DataVisulisation/DataVisulisation.js"],"names":["React","Component","d3","DataVisulisation","props","groupRef","createRef","drawCircles","scales","scalesInstance","getScales","dataVis","select","current","selectAll","data","enter","append","attr","d","x","y","color","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;IAEMC,gB;;;;;AACJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,0FAAMA,KAAN;AACA,UAAKC,QAAL,GAAgBL,KAAK,CAACM,SAAN,EAAhB;AAFiB;AAGlB;;;;wCAEmB;AAClB,WAAKC,WAAL;AACD;;;kCAEa;AACZ,UAAMC,MAAM,GAAG,KAAKJ,KAAL,CAAWK,cAAX,CAA0BC,SAA1B,EAAf;AACA,UAAMC,OAAO,GAAGT,EAAE,CAACU,MAAH,CAAU,KAAKP,QAAL,CAAcQ,OAAxB,CAAhB;AAEAF,MAAAA,OAAO,CAACG,SAAR,WACGC,IADH,CACQ,KAAKX,KAAL,CAAWW,IADnB,EAEGC,KAFH,GAGGC,MAHH,WAIGC,IAJH,OAIc,UAASC,CAAT,EAAY;AACtB,eAAOX,MAAM,CAACY,CAAP,CAASD,CAAC,CAACC,CAAX,CAAP;AACD,OANH,EAOGF,IAPH,OAOc,UAASC,CAAT,EAAY;AACtB,eAAOX,MAAM,CAACa,CAAP,CAASF,CAAC,CAACE,CAAX,CAAP;AACD,OATH,EAUGH,IAVH,MAUa,CAVb,EAWGA,IAXH,SAWgB,KAAKd,KAAL,CAAWkB,KAX3B;AAYH;;;6BAEU;AACP,aACE;AAAG,QAAA,GAAG,EAAE,KAAKjB,QAAb;AAAuB,QAAA,SAAS,mBAAY,KAAKD,KAAL,CAAWmB,IAAvB,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAID;;;;EAjC4BtB,S;;AAqC/B,eAAeE,gBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\n\nclass DataVisulisation extends Component {\n  constructor(props) {\n    super(props);\n    this.groupRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.drawCircles();\n  }\n\n  drawCircles() {\n    const scales = this.props.scalesInstance.getScales();\n    const dataVis = d3.select(this.groupRef.current);\n\n    dataVis.selectAll(`circle`)\n      .data(this.props.data)\n      .enter()\n      .append(`circle`)\n      .attr(`cx`, function(d) {\n        return scales.x(d.x);\n      })\n      .attr(`cy`, function(d) {\n        return scales.y(d.y);\n      })\n      .attr(`r`, 3)\n      .attr(`fill`, this.props.color);\n}\n\n  render() {\n    return (\n      <g ref={this.groupRef} className={`group__${this.props.name}`}>\n      </g>\n    );\n  }\n\n}\n\nexport default DataVisulisation;"]},"metadata":{},"sourceType":"module"}