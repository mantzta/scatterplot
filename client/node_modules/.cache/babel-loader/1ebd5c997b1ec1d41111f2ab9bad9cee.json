{"ast":null,"code":"import _classCallCheck from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tamara/Documents/scatterplot/client/src/App/DataVis/DataVis.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nvar DataVis =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataVis, _Component);\n\n  function DataVis(props) {\n    var _this;\n\n    _classCallCheck(this, DataVis);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataVis).call(this, props));\n    _this.groupRef = React.createRef();\n    _this.groupEl = _this.groupRef.current;\n    return _this;\n  }\n\n  _createClass(DataVis, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.drawCircles();\n    }\n  }, {\n    key: \"drawCircles\",\n    value: function drawCircles() {\n      var test = d3.select(this.groupEl);\n      test.selectAll(\"circle\").data(this.props.data).enter().append(\"circle\").attr(\"cx\", function (d) {\n        return this.props.scales.x(d.x);\n      }).attr(\"cy\", function (d) {\n        return this.props.scales.y(d.y);\n      }).attr(\"r\", 1).attr(\"fill\", \"aqua\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"g\", {\n        ref: function ref(el) {\n          return _this2.svgEl = el;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return DataVis;\n}(Component);\n\nexport default DataVis;","map":{"version":3,"sources":["/Users/tamara/Documents/scatterplot/client/src/App/DataVis/DataVis.js"],"names":["React","Component","d3","DataVis","props","groupRef","createRef","groupEl","current","drawCircles","test","select","selectAll","data","enter","append","attr","d","scales","x","y","el","svgEl"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AACA,UAAKC,QAAL,GAAgBL,KAAK,CAACM,SAAN,EAAhB;AACA,UAAKC,OAAL,GAAe,MAAKF,QAAL,CAAcG,OAA7B;AAHiB;AAIlB;;;;wCAEmB;AAClB,WAAKC,WAAL;AACD;;;kCAEa;AACZ,UAAMC,IAAI,GAAGR,EAAE,CAACS,MAAH,CAAU,KAAKJ,OAAf,CAAb;AACAG,MAAAA,IAAI,CAACE,SAAL,CAAe,QAAf,EACGC,IADH,CACQ,KAAKT,KAAL,CAAWS,IADnB,EAEGC,KAFH,GAGGC,MAHH,CAGU,QAHV,EAIGC,IAJH,CAIQ,IAJR,EAIc,UAASC,CAAT,EAAY;AAClB,eAAO,KAAKb,KAAL,CAAWc,MAAX,CAAkBC,CAAlB,CAAoBF,CAAC,CAACE,CAAtB,CAAP;AACL,OANH,EAOGH,IAPH,CAOQ,IAPR,EAOc,UAASC,CAAT,EAAY;AAClB,eAAO,KAAKb,KAAL,CAAWc,MAAX,CAAkBE,CAAlB,CAAoBH,CAAC,CAACG,CAAtB,CAAP;AACL,OATH,EAUGJ,IAVH,CAUQ,GAVR,EAUa,CAVb,EAWGA,IAXH,CAWQ,MAXR,EAWgB,MAXhB;AAYD;;;6BAEQ;AAAA;;AACP,aACE;AAAG,QAAA,GAAG,EAAE,aAAAK,EAAE;AAAA,iBAAI,MAAI,CAACC,KAAL,GAAaD,EAAjB;AAAA,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EA/BmBpB,S;;AAmCtB,eAAeE,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nclass DataVis extends Component {\n  constructor(props) {\n    super(props);\n    this.groupRef = React.createRef();\n    this.groupEl = this.groupRef.current;\n  }\n\n  componentDidMount() {\n    this.drawCircles()\n  }\n\n  drawCircles() {\n    const test = d3.select(this.groupEl)\n    test.selectAll(\"circle\")\n      .data(this.props.data)\n      .enter()\n      .append(\"circle\")\n      .attr(\"cx\", function(d) {\n            return this.props.scales.x(d.x);\n      })\n      .attr(\"cy\", function(d) {\n            return this.props.scales.y(d.y);\n      })\n      .attr(\"r\", 1)\n      .attr(\"fill\", \"aqua\");\n  }\n\n  render() {\n    return (\n      <g ref={el => this.svgEl = el}></g>\n    );\n  }\n\n}\n\nexport default DataVis;"]},"metadata":{},"sourceType":"module"}