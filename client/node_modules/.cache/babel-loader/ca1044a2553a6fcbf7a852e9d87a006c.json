{"ast":null,"code":"import _classCallCheck from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tamara/Documents/scatterplot/client/src/App/ScatterPlot/ScatterPlot.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport Axis from \"../Axis/Axis\";\nimport DataVis from \"../DataVis/DataVis\";\nimport Regression from \"../Regression/Regression\";\n\nvar ScatterPlot =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScatterPlot, _Component);\n\n  function ScatterPlot(props) {\n    var _this;\n\n    _classCallCheck(this, ScatterPlot);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScatterPlot).call(this, props));\n    _this.height = 400;\n    _this.padding = 30;\n    _this.width = 400;\n    return _this;\n  }\n\n  _createClass(ScatterPlot, [{\n    key: \"getMax\",\n    value: function getMax(dimension, data) {\n      var max = [];\n      Array.from(data).forEach(function (set) {\n        max.push(d3.max(set, function (d) {\n          return d[dimension];\n        }));\n      });\n      return Math.max.apply(Math, max);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"svg\", {\n        width: this.width,\n        height: this.height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Axis, {\n        scale: this.xScale,\n        type: \"x\",\n        height: this.height,\n        padding: this.padding,\n        width: this.width,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(Axis, {\n        scale: this.yScale,\n        type: \"y\",\n        height: this.height,\n        padding: this.padding,\n        width: this.width,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(DataVis, {\n        data: this.props.data.dataset1,\n        xScale: this.xScale,\n        yScale: this.yScale,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(DataVis, {\n        data: this.props.data.dataset2,\n        xScale: this.xScale,\n        yScale: this.yScale,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(DataVis, {\n        data: this.props.data.dataset3,\n        xScale: this.xScale,\n        yScale: this.yScale,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(Regression, {\n        data: this.props.data.dataset1,\n        scales: {\n          x: this.xScale,\n          y: this.yScale\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(Regression, {\n        data: this.props.data.dataset2,\n        scales: {\n          x: this.xScale,\n          y: this.yScale\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(Regression, {\n        data: this.props.data.dataset3,\n        scales: {\n          x: this.xScale,\n          y: this.yScale\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ScatterPlot;\n}(Component);\n\nexport default ScatterPlot;","map":{"version":3,"sources":["/Users/tamara/Documents/scatterplot/client/src/App/ScatterPlot/ScatterPlot.js"],"names":["React","Component","d3","Axis","DataVis","Regression","ScatterPlot","props","height","padding","width","dimension","data","max","Array","from","forEach","set","push","d","Math","xScale","yScale","dataset1","dataset2","dataset3","x","y"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport Axis from \"../Axis/Axis\"\nimport DataVis from \"../DataVis/DataVis\"\nimport Regression from \"../Regression/Regression\"\n\nclass ScatterPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.height = 400;\n    this.padding  = 30;\n    this.width= 400;\n  }\n\n  getMax(dimension, data) {\n    const max = []\n\n    Array.from(data).forEach(set => {\n      max.push(d3.max(set, function(d) { return d[dimension]; }))\n    });\n    return Math.max(...max)\n  }\n\n  render() {\n    return (\n      <svg width={this.width} height={this.height}>\n        <Axis scale={this.xScale} type=\"x\" height={this.height} padding={this.padding} width={this.width} />\n        <Axis scale={this.yScale} type=\"y\" height={this.height} padding={this.padding} width={this.width} />\n        <DataVis data={this.props.data.dataset1} xScale={this.xScale} yScale={this.yScale} />\n        <DataVis data={this.props.data.dataset2} xScale={this.xScale} yScale={this.yScale} />\n        <DataVis data={this.props.data.dataset3} xScale={this.xScale} yScale={this.yScale} />\n        <Regression data={this.props.data.dataset1} scales={ {x: this.xScale, y: this.yScale} } />\n        <Regression data={this.props.data.dataset2} scales={ {x: this.xScale, y: this.yScale} } />\n        <Regression data={this.props.data.dataset3} scales={ {x: this.xScale, y: this.yScale} } />\n      </svg>\n    );\n  }\n}\n\nexport default ScatterPlot;"]},"metadata":{},"sourceType":"module"}