{"ast":null,"code":"import _classCallCheck from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tamara/Documents/scatterplot/client/src/App/DataVis/DataVis.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nvar DataVis =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataVis, _Component);\n\n  function DataVis(props) {\n    var _this;\n\n    _classCallCheck(this, DataVis);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataVis).call(this, props));\n    _this.groupRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(DataVis, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.drawCircles();\n    }\n  }, {\n    key: \"drawCircles\",\n    value: function drawCircles() {\n      var xScale = d3.scaleLinear().domain([0, this.props.maxX]).range([30, 400]);\n      var yScale = d3.scaleLinear().domain([0, this.props.maxY]).range([400, 30]);\n      d3.select(this.groupEl).selectAll(\"circle\").data(this.props.data).enter().append(\"circle\").attr(\"cx\", function (d) {\n        return xScale(d.x);\n      }).attr(\"cy\", function (d) {\n        return yScale(d.y);\n      }).attr(\"r\", 3).attr(\"fill\", \"aqua\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"g\", {\n        ref: function ref(el) {\n          return _this2.groupEl = el;\n        },\n        className: \"test\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return DataVis;\n}(Component);\n\nexport default DataVis;","map":{"version":3,"sources":["/Users/tamara/Documents/scatterplot/client/src/App/DataVis/DataVis.js"],"names":["React","Component","d3","DataVis","props","groupRef","createRef","drawCircles","xScale","scaleLinear","domain","maxX","range","yScale","maxY","select","groupEl","selectAll","data","enter","append","attr","d","x","y","el"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AACA,UAAKC,QAAL,GAAgBL,KAAK,CAACM,SAAN,EAAhB;AAFiB;AAGlB;;;;wCAEmB;AAClB,WAAKC,WAAL;AACD;;;kCAEa;AACZ,UAAMC,MAAM,GAAGN,EAAE,CAACO,WAAH,GAAiBC,MAAjB,CAAwB,CAAC,CAAD,EAAG,KAAKN,KAAL,CAAWO,IAAd,CAAxB,EAA6CC,KAA7C,CAAmD,CAAC,EAAD,EAAK,GAAL,CAAnD,CAAf;AACA,UAAMC,MAAM,GAAGX,EAAE,CAACO,WAAH,GAAiBC,MAAjB,CAAwB,CAAC,CAAD,EAAG,KAAKN,KAAL,CAAWU,IAAd,CAAxB,EAA6CF,KAA7C,CAAmD,CAAC,GAAD,EAAM,EAAN,CAAnD,CAAf;AAEAV,MAAAA,EAAE,CAACa,MAAH,CAAU,KAAKC,OAAf,EACGC,SADH,CACa,QADb,EAEGC,IAFH,CAEQ,KAAKd,KAAL,CAAWc,IAFnB,EAGGC,KAHH,GAIGC,MAJH,CAIU,QAJV,EAKGC,IALH,CAKQ,IALR,EAKc,UAASC,CAAT,EAAY;AACtB,eAAOd,MAAM,CAACc,CAAC,CAACC,CAAH,CAAb;AACD,OAPH,EAQGF,IARH,CAQQ,IARR,EAQc,UAASC,CAAT,EAAY;AACtB,eAAOT,MAAM,CAACS,CAAC,CAACE,CAAH,CAAb;AACD,OAVH,EAWGH,IAXH,CAWQ,GAXR,EAWa,CAXb,EAYGA,IAZH,CAYQ,MAZR,EAYgB,MAZhB;AAaH;;;6BAEU;AAAA;;AACP,aACE;AAAG,QAAA,GAAG,EAAE,aAAAI,EAAE;AAAA,iBAAI,MAAI,CAACT,OAAL,GAAeS,EAAnB;AAAA,SAAV;AAAiC,QAAA,SAAS,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EAjCmBxB,S;;AAqCtB,eAAeE,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nclass DataVis extends Component {\n  constructor(props) {\n    super(props);\n    this.groupRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.drawCircles()\n  }\n\n  drawCircles() {\n    const xScale = d3.scaleLinear().domain([0,this.props.maxX]).range([30, 400]);\n    const yScale = d3.scaleLinear().domain([0,this.props.maxY]).range([400, 30]);\n\n    d3.select(this.groupEl)\n      .selectAll(\"circle\")\n      .data(this.props.data)\n      .enter()\n      .append(\"circle\")\n      .attr(\"cx\", function(d) {\n        return xScale(d.x);\n      })\n      .attr(\"cy\", function(d) {\n        return yScale(d.y);\n      })\n      .attr(\"r\", 3)\n      .attr(\"fill\", \"aqua\");\n}\n\n  render() {\n    return (\n      <g ref={el => this.groupEl = el} className=\"test\"></g>\n    );\n  }\n\n}\n\nexport default DataVis;"]},"metadata":{},"sourceType":"module"}