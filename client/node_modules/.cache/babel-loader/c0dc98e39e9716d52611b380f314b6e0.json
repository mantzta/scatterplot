{"ast":null,"code":"import _classCallCheck from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tamara/Documents/scatterplot/client/src/App/ScatterPlot/ScatterPlot.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport Axis from \"../Axis/Axis\";\nimport DataVis from \"../DataVis/DataVis\";\nimport Regression from \"../Regression/Regression\";\n\nvar ScatterPlot =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScatterPlot, _Component);\n\n  function ScatterPlot(props) {\n    var _this;\n\n    _classCallCheck(this, ScatterPlot);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScatterPlot).call(this, props));\n    _this.height = 400;\n    _this.padding = 30;\n    _this.width = 400;\n    _this.maxX = _this.getMax(\"x\", _this.props.data);\n    _this.maxY = _this.getMax(\"y\", _this.props.data);\n    return _this;\n  }\n\n  _createClass(ScatterPlot, [{\n    key: \"getMax\",\n    value: function getMax(dimension, data) {\n      var max = [];\n      Object.entries(data).forEach(function (set) {\n        max.push(d3.max(set[1], function (d) {\n          return d[dimension];\n        }));\n      });\n      return d3.max(max);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"svg\", {\n        width: this.width,\n        height: this.height,\n        style: {\n          background: yellow\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Axis, {\n        scale: this.xScale,\n        dimension: \"x\",\n        height: this.height,\n        padding: this.padding,\n        width: this.width,\n        maxX: this.maxX,\n        maxY: this.maxY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(Axis, {\n        scale: this.yScale,\n        dimension: \"y\",\n        height: this.height,\n        padding: this.padding,\n        width: this.width,\n        maxX: this.maxX,\n        maxY: this.maxY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(DataVis, {\n        data: this.props.data.dataset1,\n        maxX: this.maxX,\n        maxY: this.maxY,\n        color: \"aqua\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(DataVis, {\n        data: this.props.data.dataset2,\n        maxX: this.maxX,\n        maxY: this.maxY,\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(DataVis, {\n        data: this.props.data.dataset3,\n        maxX: this.maxX,\n        maxY: this.maxY,\n        color: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(Regression, {\n        data: this.props.data.dataset1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Regression, {\n        data: this.props.data.dataset2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(Regression, {\n        data: this.props.data.dataset3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ScatterPlot;\n}(Component);\n\nexport default ScatterPlot;","map":{"version":3,"sources":["/Users/tamara/Documents/scatterplot/client/src/App/ScatterPlot/ScatterPlot.js"],"names":["React","Component","d3","Axis","DataVis","Regression","ScatterPlot","props","height","padding","width","maxX","getMax","data","maxY","dimension","max","Object","entries","forEach","set","push","d","background","yellow","xScale","yScale","dataset1","dataset2","dataset3"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport Axis from \"../Axis/Axis\"\nimport DataVis from \"../DataVis/DataVis\"\nimport Regression from \"../Regression/Regression\"\n\nclass ScatterPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.height = 400;\n    this.padding  = 30;\n    this.width= 400;\n    this.maxX = this.getMax(`x`, this.props.data)\n    this.maxY = this.getMax(`y`, this.props.data)\n  }\n\n  getMax(dimension, data) {\n    const max = []\n\n    Object.entries(data).forEach(set => {\n      max.push(d3.max(set[1], function(d) { return d[dimension]; }))\n    });\n\n    return d3.max(max)\n  }\n\n  render() {\n    return (\n      <svg width={this.width} height={this.height} style={{background: yellow}}>\n        <Axis scale={this.xScale} dimension=\"x\" height={this.height} padding={this.padding} width={this.width} maxX={this.maxX} maxY={this.maxY} />\n        <Axis scale={this.yScale} dimension=\"y\" height={this.height} padding={this.padding} width={this.width} maxX={this.maxX} maxY={this.maxY} />\n        <DataVis data={this.props.data.dataset1} maxX={this.maxX} maxY={this.maxY} color=\"aqua\" />\n        <DataVis data={this.props.data.dataset2} maxX={this.maxX} maxY={this.maxY} color=\"red\" />\n        <DataVis data={this.props.data.dataset3} maxX={this.maxX} maxY={this.maxY} color=\"green\" />\n        <Regression data={this.props.data.dataset1} />\n        <Regression data={this.props.data.dataset2} />\n        <Regression data={this.props.data.dataset3} />\n      </svg>\n    );\n  }\n}\n\nexport default ScatterPlot;"]},"metadata":{},"sourceType":"module"}