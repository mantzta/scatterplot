{"ast":null,"code":"import _readOnlyError from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\nimport _classCallCheck from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tamara/Documents/scatterplot/client/src/App/Legend/Legend.js\";\nimport React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport DataVisualisation from \"../DataVisualisation/DataVisualisation\";\n\nvar Legend =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Legend, _Component);\n\n  function Legend(props) {\n    var _this;\n\n    _classCallCheck(this, Legend);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Legend).call(this, props));\n    _this.groupRef = React.createRef();\n    _this.xPos = 40;\n    _this.yPos = 20;\n    _this.state = {\n      shownData: []\n    };\n    return _this;\n  }\n\n  _createClass(Legend, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.drawLegend();\n    }\n    /**\n     * @param {string} key\n     */\n\n  }, {\n    key: \"onClick\",\n    value: function onClick(key) {\n      var _this2 = this;\n\n      var group = d3.select(this.groupRef.current);\n      var data = group.select(\".group__\".concat(key));\n      var shownData = this.state.shownData;\n\n      if (data.empty()) {\n        /* eslint-disable no-console */\n        console.log(\"hallo\");\n        data = React.createElement(DataVisualisation, {\n          data: this.props.datasets[key].data,\n          scalesInstance: this.props.scalesInstance,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n        shownData.push(data);\n      } else {\n        /* eslint-disable no-console */\n        console.log(\"ssss\");\n        this.state.shownData.forEach(function (d) {\n          if (data === d) {\n            shownData = (_readOnlyError(\"shownData\"), _this2.state.shownData.filter(function (d) {\n              return data !== d;\n            }));\n          }\n        });\n      }\n    }\n  }, {\n    key: \"drawLegend\",\n    value: function drawLegend() {\n      var _this3 = this;\n\n      var legend = d3.select(this.groupRef.current);\n      var x = this.xPos;\n      Object.keys(this.props.datasets).forEach(function (key) {\n        var g = legend.append(\"g\").on(\"click\", _this3.onClick.bind(_this3, key));\n        g.attr(\"class\", \"legend\").append(\"circle\").attr(\"cx\", x).attr(\"cy\", _this3.yPos).attr(\"r\", 10).attr(\"fill\", _this3.props.datasets[key].color);\n        g.append(\"text\").attr(\"x\", x + 15).attr(\"y\", _this3.yPos).text(key).attr(\"alignment-baseline\", \"middle\");\n        x += 100;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"g\", {\n        ref: this.groupRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.shownData);\n    }\n  }]);\n\n  return Legend;\n}(Component);\n\nexport default Legend;","map":{"version":3,"sources":["/Users/tamara/Documents/scatterplot/client/src/App/Legend/Legend.js"],"names":["React","Component","d3","DataVisualisation","Legend","props","groupRef","createRef","xPos","yPos","state","shownData","drawLegend","key","group","select","current","data","empty","console","log","datasets","scalesInstance","push","forEach","d","filter","legend","x","Object","keys","g","append","on","onClick","bind","attr","color","text"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport DataVisualisation from \"../DataVisualisation/DataVisualisation\";\n\nclass Legend extends Component {\n  constructor(props) {\n    super(props);\n    this.groupRef = React.createRef();\n    this.xPos = 40;\n    this.yPos = 20;\n    this.state = {\n      shownData: []\n    }\n  }\n\n  componentDidMount() {\n    this.drawLegend();\n  }\n\n  /**\n   * @param {string} key\n   */\n  onClick(key) {\n    const group = d3.select(this.groupRef.current);\n    let data = group.select(`.group__${key}`);\n    const shownData = this.state.shownData;\n    if (data.empty()) {\n      /* eslint-disable no-console */\n      console.log(`hallo`)\n      data = <DataVisualisation data={this.props.datasets[key].data}\n      scalesInstance={this.props.scalesInstance} />;\n      shownData.push(data);\n    } else {\n      /* eslint-disable no-console */\n      console.log(`ssss`)\n      this.state.shownData.forEach((d) => {\n        if (data === d) {\n          shownData = this.state.shownData.filter(d => data !== d)\n        }\n      })\n    }\n  }\n\n  drawLegend() {\n    const legend = d3.select(this.groupRef.current);\n    let x = this.xPos;\n\n    Object.keys(this.props.datasets).forEach((key) => {\n      const g = legend.append(`g`)\n        .on(`click`, this.onClick.bind(this, key));\n      g.attr(`class`, `legend`)\n        .append(`circle`)\n        .attr(`cx`, x)\n        .attr(`cy`, this.yPos)\n        .attr(`r`, 10)\n        .attr(`fill`, this.props.datasets[key].color);\n\n      g.append(`text`)\n        .attr(`x`, x + 15)\n        .attr(`y`, this.yPos)\n        .text(key)\n        .attr(`alignment-baseline`,`middle`);\n\n      x += 100;\n    });\n}\n\n  render() {\n    return (\n      <g ref={this.groupRef}>\n        {this.shownData}\n      </g>\n    );\n  }\n\n}\n\nexport default Legend;"]},"metadata":{},"sourceType":"module"}