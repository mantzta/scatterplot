{"ast":null,"code":"import _classCallCheck from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tamara/Documents/scatterplot/client/src/App/Button/Button.js\";\nimport React, { Component } from \"react\";\nimport Regression from \"../Regression/Regression\";\n\nvar Button =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Button, _Component);\n\n  function Button(props) {\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Button).call(this, props));\n    _this.state = {\n      degree: 3,\n      dataVisualisations: []\n    };\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"onClick\",\n    value: function onClick() {\n      var _this2 = this;\n\n      var dataVisualisations = [];\n      Object.keys(this.props.datasets).forEach(function (key) {\n        if (document.querySelector(\"[data-name=\".concat(key, \"]\")).length > 0) {\n          var dataVis = React.createElement(Regression, {\n            key: \"regression-\".concat(key),\n            data: _this2.datasets[key],\n            scalesInstance: _this2.scalesInstance,\n            degree: _this2.state.degree,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18\n            },\n            __self: this\n          });\n          dataVisualisations.push(dataVis);\n        }\n      });\n      this.setState({\n        dataVisualisations: dataVisualisations\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(event) {\n      this.setState({\n        degree: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Calculate Regression Lines\"), React.createElement(\"input\", {\n        onChange: this.onChange,\n        type: \"text\",\n        placeholder: \"Choose a degree\",\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"3\"));\n    }\n  }]);\n\n  return Button;\n}(Component);\n\nexport default Button;","map":{"version":3,"sources":["/Users/tamara/Documents/scatterplot/client/src/App/Button/Button.js"],"names":["React","Component","Regression","Button","props","state","degree","dataVisualisations","Object","keys","datasets","forEach","key","document","querySelector","length","dataVis","scalesInstance","push","setState","event","target","value","onClick","onChange"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;IAEMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,CADG;AAEXC,MAAAA,kBAAkB,EAAE;AAFT,KAAb;AAFiB;AAMlB;;;;8BAES;AAAA;;AACR,UAAMA,kBAAkB,GAAG,EAA3B;AAEAC,MAAAA,MAAM,CAACC,IAAP,CAAY,KAAKL,KAAL,CAAWM,QAAvB,EAAiCC,OAAjC,CAAyC,UAACC,GAAD,EAAS;AAChD,YAAIC,QAAQ,CAACC,aAAT,sBAAqCF,GAArC,QAA6CG,MAA7C,GAAsD,CAA1D,EAA6D;AAC3D,cAAMC,OAAO,GAAG,oBAAC,UAAD;AAAY,YAAA,GAAG,uBAAgBJ,GAAhB,CAAf;AAAsC,YAAA,IAAI,EAAE,MAAI,CAACF,QAAL,CAAcE,GAAd,CAA5C;AAChB,YAAA,cAAc,EAAE,MAAI,CAACK,cADL;AACqB,YAAA,MAAM,EAAE,MAAI,CAACZ,KAAL,CAAWC,MADxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAhB;AAGAC,UAAAA,kBAAkB,CAACW,IAAnB,CAAwBF,OAAxB;AACD;AACF,OAPD;AASA,WAAKG,QAAL,CAAc;AAACZ,QAAAA,kBAAkB,EAAlBA;AAAD,OAAd;AACD;;;6BAEQa,K,EAAO;AACd,WAAKD,QAAL,CAAc;AAACb,QAAAA,MAAM,EAAEc,KAAK,CAACC,MAAN,CAAaC;AAAtB,OAAd;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,KAAKC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,EAEE;AAAO,QAAA,QAAQ,EAAE,KAAKC,QAAtB;AAAgC,QAAA,IAAI,EAAC,MAArC;AAA4C,QAAA,WAAW,EAAC,iBAAxD;AAA0E,QAAA,KAAK,EAAC,GAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF;AAMD;;;;EAnCkBvB,S;;AAsCrB,eAAeE,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Regression from \"../Regression/Regression\";\n\nclass Button extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      degree: 3,\n      dataVisualisations: []\n    }\n  }\n\n  onClick() {\n    const dataVisualisations = [];\n\n    Object.keys(this.props.datasets).forEach((key) => {\n      if (document.querySelector(`[data-name=${key}]`).length > 0) {\n        const dataVis = <Regression key={`regression-${key}`} data={this.datasets[key]}\n        scalesInstance={this.scalesInstance} degree={this.state.degree} />;\n\n        dataVisualisations.push(dataVis);\n      }\n    })\n\n    this.setState({dataVisualisations});\n  }\n\n  onChange(event) {\n    this.setState({degree: event.target.value})\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.onClick}>Calculate Regression Lines</button>\n        <input onChange={this.onChange} type=\"text\" placeholder=\"Choose a degree\" value=\"3\">3</input>\n      </div>\n    );\n  }\n}\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}