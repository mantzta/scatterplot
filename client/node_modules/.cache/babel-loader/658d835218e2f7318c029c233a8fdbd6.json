{"ast":null,"code":"import _classCallCheck from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tamara/Documents/scatterplot/client/src/App/Legend/Legend.js\";\nimport React, { Component } from \"react\";\nimport * as d3 from \"d3\";\n\nvar Legend =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Legend, _Component);\n\n  function Legend(props) {\n    var _this;\n\n    _classCallCheck(this, Legend);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Legend).call(this, props));\n    _this.groupRef = React.createRef();\n    _this.xPos = 40;\n    _this.yPos = 20;\n    return _this;\n  }\n\n  _createClass(Legend, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.drawLegend();\n    }\n    /**\n     * @param {string} dataName\n     */\n\n  }, {\n    key: \"onClick\",\n    value: function onClick(dataName) {\n      var dataVis = document.querySelector(\".group__\".concat(dataName));\n      console.log(dataVis);\n      dataVis.setAttribute(\"hidden\", \"false\");\n      dataVis.removeAttribute(\"hidden\");\n      dataVis = null;\n    }\n  }, {\n    key: \"drawLegend\",\n    value: function drawLegend() {\n      var _this2 = this;\n\n      var legend = d3.select(this.groupRef.current);\n      var x = this.xPos;\n      Object.keys(this.props.datasets).forEach(function (key) {\n        legend.append(\"g\").on(\"click\", _this2.onClick.bind(_this2, key)).attr(\"class\", \"legend\").append(\"circle\").attr(\"cx\", x).attr(\"cy\", _this2.yPos).attr(\"r\", 10).attr(\"fill\", _this2.props.datasets[key].color).append(\"text\").attr(\"x\", x + 15).attr(\"y\", _this2.yPos).text(key).attr(\"alignment-baseline\", \"middle\");\n        x += 100;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"g\", {\n        ref: this.groupRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Legend;\n}(Component);\n\nexport default Legend;","map":{"version":3,"sources":["/Users/tamara/Documents/scatterplot/client/src/App/Legend/Legend.js"],"names":["React","Component","d3","Legend","props","groupRef","createRef","xPos","yPos","drawLegend","dataName","dataVis","document","querySelector","console","log","setAttribute","removeAttribute","legend","select","current","x","Object","keys","datasets","forEach","key","append","on","onClick","bind","attr","color","text"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;IAEMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;AACA,UAAKC,QAAL,GAAgBL,KAAK,CAACM,SAAN,EAAhB;AACA,UAAKC,IAAL,GAAY,EAAZ;AACA,UAAKC,IAAL,GAAY,EAAZ;AAJiB;AAKlB;;;;wCAEmB;AAClB,WAAKC,UAAL;AACD;AAED;;;;;;4BAGQC,Q,EAAU;AAChB,UAAIC,OAAO,GAAGC,QAAQ,CAACC,aAAT,mBAAkCH,QAAlC,EAAd;AAEAI,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACAA,MAAAA,OAAO,CAACK,YAAR;AACAL,MAAAA,OAAO,CAACM,eAAR;AAEAN,MAAAA,OAAO,GAAG,IAAV;AACD;;;iCAEY;AAAA;;AACX,UAAMO,MAAM,GAAGhB,EAAE,CAACiB,MAAH,CAAU,KAAKd,QAAL,CAAce,OAAxB,CAAf;AACA,UAAIC,CAAC,GAAG,KAAKd,IAAb;AAEAe,MAAAA,MAAM,CAACC,IAAP,CAAY,KAAKnB,KAAL,CAAWoB,QAAvB,EAAiCC,OAAjC,CAAyC,UAACC,GAAD,EAAS;AAChDR,QAAAA,MAAM,CAACS,MAAP,MACGC,EADH,UACe,MAAI,CAACC,OAAL,CAAaC,IAAb,CAAkB,MAAlB,EAAwBJ,GAAxB,CADf,EAEGK,IAFH,oBAGGJ,MAHH,WAIGI,IAJH,OAIcV,CAJd,EAKGU,IALH,OAKc,MAAI,CAACvB,IALnB,EAMGuB,IANH,MAMa,EANb,EAOGA,IAPH,SAOgB,MAAI,CAAC3B,KAAL,CAAWoB,QAAX,CAAoBE,GAApB,EAAyBM,KAPzC,EAQGL,MARH,SASGI,IATH,MASaV,CAAC,GAAG,EATjB,EAUGU,IAVH,MAUa,MAAI,CAACvB,IAVlB,EAWGyB,IAXH,CAWQP,GAXR,EAYGK,IAZH;AAcAV,QAAAA,CAAC,IAAI,GAAL;AACD,OAhBD;AAiBH;;;6BAEU;AACP,aACE;AAAG,QAAA,GAAG,EAAE,KAAKhB,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAID;;;;EArDkBJ,S;;AAyDrB,eAAeE,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\n\nclass Legend extends Component {\n  constructor(props) {\n    super(props);\n    this.groupRef = React.createRef();\n    this.xPos = 40;\n    this.yPos = 20;\n  }\n\n  componentDidMount() {\n    this.drawLegend();\n  }\n\n  /**\n   * @param {string} dataName\n   */\n  onClick(dataName) {\n    let dataVis = document.querySelector(`.group__${dataName}`);\n\n    console.log(dataVis);\n    dataVis.setAttribute(`hidden`, `false`);\n    dataVis.removeAttribute(`hidden`);\n\n    dataVis = null;\n  }\n\n  drawLegend() {\n    const legend = d3.select(this.groupRef.current);\n    let x = this.xPos;\n\n    Object.keys(this.props.datasets).forEach((key) => {\n      legend.append(`g`)\n        .on(`click`, this.onClick.bind(this, key))\n        .attr(`class`, `legend`)\n        .append(`circle`)\n        .attr(`cx`, x)\n        .attr(`cy`, this.yPos)\n        .attr(`r`, 10)\n        .attr(`fill`, this.props.datasets[key].color)\n        .append(`text`)\n        .attr(`x`, x + 15)\n        .attr(`y`, this.yPos)\n        .text(key)\n        .attr(`alignment-baseline`,`middle`);\n\n      x += 100;\n    });\n}\n\n  render() {\n    return (\n      <g ref={this.groupRef}>\n      </g>\n    );\n  }\n\n}\n\nexport default Legend;"]},"metadata":{},"sourceType":"module"}