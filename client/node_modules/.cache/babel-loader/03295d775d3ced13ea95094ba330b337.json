{"ast":null,"code":"import _classCallCheck from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tamara/Documents/scatterplot/client/src/App/Axis/Axis.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nvar Axis =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Axis, _Component);\n\n  function Axis(props) {\n    _classCallCheck(this, Axis);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Axis).call(this, props));\n  }\n\n  _createClass(Axis, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.drawAxis();\n    }\n  }, {\n    key: \"getMax\",\n    value: function getMax(dimension, data) {\n      var max = [];\n      Array.from(data).forEach(function (set) {\n        max.push(d3.max(set, function (d) {\n          return d[dimension];\n        }));\n      });\n      return Math.max.apply(Math, max);\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(rangeStart, rangeEnd, max) {\n      return d3.scaleLinear().domain([0, max]).range([rangeStart, rangeEnd]);\n    }\n  }, {\n    key: \"drawAxis\",\n    value: function drawAxis() {\n      if (this.props.data) {\n        this.xScale = this.getScale(this.padding, this.width - this.padding, this.getMax(\"x\", this.props.data));\n        this.yScale = this.getScale(this.height - this.padding, this.padding, this.getMax(\"y\", this.props.data));\n        var axis, xTranslate, yTranslate;\n        /* eslint-disable no-console */\n\n        /* eslint-disable no-console */\n\n        console.log(\"HALALLAL\");\n        console.log(this.yScale(200));\n\n        if (this.props.type === \"x\") {\n          axis = d3.axisBottom(this.xScale);\n          xTranslate = 0;\n          yTranslate = this.props.height - this.props.padding;\n        } else if (this.props.type === \"y\") {\n          axis = d3.axisLeft(this.yScale);\n          xTranslate = this.props.padding;\n          yTranslate = 0;\n        }\n\n        d3.select(this.groupEl).attr(\"transform\", \"translate(\".concat(xTranslate, \", \").concat(yTranslate, \")\")).call(axis);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"g\", {\n        ref: function ref(el) {\n          return _this.groupEl = el;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Axis;\n}(Component);\n\nexport default Axis;","map":{"version":3,"sources":["/Users/tamara/Documents/scatterplot/client/src/App/Axis/Axis.js"],"names":["React","Component","d3","Axis","props","drawAxis","dimension","data","max","Array","from","forEach","set","push","d","Math","rangeStart","rangeEnd","scaleLinear","domain","range","xScale","getScale","padding","width","getMax","yScale","height","axis","xTranslate","yTranslate","console","log","type","axisBottom","axisLeft","select","groupEl","attr","call","el"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;IAEMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6EACXA,KADW;AAElB;;;;wCAEmB;AAClB,WAAKC,QAAL;AACD;;;2BAEMC,S,EAAWC,I,EAAM;AACtB,UAAMC,GAAG,GAAG,EAAZ;AAEAC,MAAAA,KAAK,CAACC,IAAN,CAAWH,IAAX,EAAiBI,OAAjB,CAAyB,UAAAC,GAAG,EAAI;AAC9BJ,QAAAA,GAAG,CAACK,IAAJ,CAASX,EAAE,CAACM,GAAH,CAAOI,GAAP,EAAY,UAASE,CAAT,EAAY;AAAE,iBAAOA,CAAC,CAACR,SAAD,CAAR;AAAsB,SAAhD,CAAT;AACD,OAFD;AAGA,aAAOS,IAAI,CAACP,GAAL,OAAAO,IAAI,EAAQP,GAAR,CAAX;AACD;;;6BAEQQ,U,EAAYC,Q,EAAUT,G,EAAK;AAClC,aAAON,EAAE,CAACgB,WAAH,GACJC,MADI,CACG,CAAC,CAAD,EAAIX,GAAJ,CADH,EAEJY,KAFI,CAEE,CAACJ,UAAD,EAAaC,QAAb,CAFF,CAAP;AAGD;;;+BAEU;AACT,UAAI,KAAKb,KAAL,CAAWG,IAAf,EAAqB;AACnB,aAAKc,MAAL,GAAc,KAAKC,QAAL,CACd,KAAKC,OADS,EAEd,KAAKC,KAAL,GAAa,KAAKD,OAFJ,EAGd,KAAKE,MAAL,MAAiB,KAAKrB,KAAL,CAAWG,IAA5B,CAHc,CAAd;AAKF,aAAKmB,MAAL,GAAc,KAAKJ,QAAL,CACZ,KAAKK,MAAL,GAAc,KAAKJ,OADP,EAEZ,KAAKA,OAFO,EAGZ,KAAKE,MAAL,MAAiB,KAAKrB,KAAL,CAAWG,IAA5B,CAHY,CAAd;AAMA,YAAIqB,IAAJ,EAAUC,UAAV,EAAsBC,UAAtB;AAEA;;AACA;;AACAC,QAAAA,OAAO,CAACC,GAAR;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,MAAL,CAAY,GAAZ,CAAZ;;AAEA,YAAI,KAAKtB,KAAL,CAAW6B,IAAX,QAAJ,EAA6B;AAC3BL,UAAAA,IAAI,GAAG1B,EAAE,CAACgC,UAAH,CAAc,KAAKb,MAAnB,CAAP;AACAQ,UAAAA,UAAU,GAAG,CAAb;AACAC,UAAAA,UAAU,GAAG,KAAK1B,KAAL,CAAWuB,MAAX,GAAoB,KAAKvB,KAAL,CAAWmB,OAA5C;AACD,SAJD,MAIO,IAAI,KAAKnB,KAAL,CAAW6B,IAAX,QAAJ,EAA6B;AAClCL,UAAAA,IAAI,GAAG1B,EAAE,CAACiC,QAAH,CAAY,KAAKT,MAAjB,CAAP;AACAG,UAAAA,UAAU,GAAG,KAAKzB,KAAL,CAAWmB,OAAxB;AACAO,UAAAA,UAAU,GAAG,CAAb;AACD;;AAED5B,QAAAA,EAAE,CAACkC,MAAH,CAAU,KAAKC,OAAf,EACGC,IADH,kCACkCT,UADlC,eACiDC,UADjD,QAEGS,IAFH,CAEQX,IAFR;AAGC;AACF;;;6BAEQ;AAAA;;AACP,aACE;AAAG,QAAA,GAAG,EAAE,aAAAY,EAAE;AAAA,iBAAI,KAAI,CAACH,OAAL,GAAeG,EAAnB;AAAA,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EAhEgBvC,S;;AAoEnB,eAAeE,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nclass Axis extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.drawAxis()\n  }\n\n  getMax(dimension, data) {\n    const max = []\n\n    Array.from(data).forEach(set => {\n      max.push(d3.max(set, function(d) { return d[dimension]; }))\n    });\n    return Math.max(...max)\n  }\n\n  getScale(rangeStart, rangeEnd, max) {\n    return d3.scaleLinear()\n      .domain([0, max])\n      .range([rangeStart, rangeEnd]);\n  }\n\n  drawAxis() {\n    if (this.props.data) {\n      this.xScale = this.getScale(\n      this.padding,\n      this.width - this.padding,\n      this.getMax(`x`, this.props.data)\n    );\n    this.yScale = this.getScale(\n      this.height - this.padding,\n      this.padding,\n      this.getMax(`y`, this.props.data)\n    );\n\n    let axis, xTranslate, yTranslate\n\n    /* eslint-disable no-console */\n    /* eslint-disable no-console */\n    console.log(`HALALLAL`)\n    console.log(this.yScale(200))\n\n    if (this.props.type === `x`) {\n      axis = d3.axisBottom(this.xScale)\n      xTranslate = 0\n      yTranslate = this.props.height - this.props.padding\n    } else if (this.props.type === `y`) {\n      axis = d3.axisLeft(this.yScale)\n      xTranslate = this.props.padding\n      yTranslate = 0\n    }\n\n    d3.select(this.groupEl)\n      .attr(`transform`, `translate(${xTranslate}, ${yTranslate})`)\n      .call(axis);\n    }\n  }\n\n  render() {\n    return (\n      <g ref={el => this.groupEl = el}></g>\n    );\n  }\n\n}\n\nexport default Axis;"]},"metadata":{},"sourceType":"module"}