{"ast":null,"code":"import _classCallCheck from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tamara/Documents/scatterplot/client/src/App/Button/Button.js\";\nimport React, { Component } from \"react\";\n\nvar Button =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Button, _Component);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Button).apply(this, arguments));\n  }\n\n  _createClass(Button, [{\n    key: \"onClick\",\n    value: function onClick() {\n      var regression = document.querySelector(\".regression__\".concat(dataName));\n\n      if (+regression.getAttribute(\"opacity\") === 0) {\n        regression.setAttribute(\"opacity\", 100);\n      } else {\n        regression.setAttribute(\"opacity\", 0);\n      }\n\n      regression = null;\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Calculate Regression Lines\"), React.createElement(\"input\", {\n        onChange: this.onChange,\n        type: \"text\",\n        placeholder: \"Choose a degree\",\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"3\"));\n    }\n  }]);\n\n  return Button;\n}(Component);\n\nexport default Button;","map":{"version":3,"sources":["/Users/tamara/Documents/scatterplot/client/src/App/Button/Button.js"],"names":["React","Component","Button","regression","document","querySelector","dataName","getAttribute","setAttribute","onClick","onChange"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,M;;;;;;;;;;;;;8BACM;AACR,UAAIC,UAAU,GAAGC,QAAQ,CAACC,aAAT,wBAAuCC,QAAvC,EAAjB;;AAEA,UAAI,CAACH,UAAU,CAACI,YAAX,WAAD,KAAwC,CAA5C,EAA+C;AAC7CJ,QAAAA,UAAU,CAACK,YAAX,YAAmC,GAAnC;AACD,OAFD,MAEO;AACLL,QAAAA,UAAU,CAACK,YAAX,YAAmC,CAAnC;AACD;;AAEDL,MAAAA,UAAU,GAAG,IAAb;AACD;;;+BAEU,CAEV;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,KAAKM,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,EAEE;AAAO,QAAA,QAAQ,EAAE,KAAKC,QAAtB;AAAgC,QAAA,IAAI,EAAC,MAArC;AAA4C,QAAA,WAAW,EAAC,iBAAxD;AAA0E,QAAA,KAAK,EAAC,GAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF;AAMD;;;;EAxBkBT,S;;AA2BrB,eAAeC,MAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Button extends Component {\n  onClick() {\n    let regression = document.querySelector(`.regression__${dataName}`);\n\n    if (+regression.getAttribute(`opacity`) === 0) {\n      regression.setAttribute(`opacity`, 100);\n    } else {\n      regression.setAttribute(`opacity`, 0);\n    }\n\n    regression = null;\n  }\n\n  onChange() {\n\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.onClick}>Calculate Regression Lines</button>\n        <input onChange={this.onChange} type=\"text\" placeholder=\"Choose a degree\" value=\"3\">3</input>\n      </div>\n    );\n  }\n}\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}