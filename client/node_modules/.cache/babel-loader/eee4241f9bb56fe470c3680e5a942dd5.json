{"ast":null,"code":"import _classCallCheck from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tamara/Documents/scatterplot/client/src/App/Legend/Legend.js\";\nimport React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport DataVisualisation from \"../DataVisualisation/DataVisualisation\";\n\nvar Legend =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Legend, _Component);\n\n  function Legend(props) {\n    var _this;\n\n    _classCallCheck(this, Legend);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Legend).call(this, props));\n    _this.groupRef = React.createRef();\n    _this.xPos = 40;\n    _this.yPos = 20;\n    _this.state = {\n      shownData: []\n    };\n    return _this;\n  }\n\n  _createClass(Legend, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.drawLegend();\n    }\n    /**\n     * @param {string} key\n     */\n\n  }, {\n    key: \"onClick\",\n    value: function onClick(key) {\n      var group = d3.select(this.groupRef.current);\n      var data = group.select(\"[data-key=\".concat(key, \"]\"));\n      var shownData = this.state.shownData;\n\n      if (data.empty()) {\n        var dataVis = React.createElement(DataVisualisation, {\n          key: \"data-\".concat(key),\n          data: this.props.datasets[key].data,\n          scalesInstance: this.props.scalesInstance,\n          color: this.props.datasets[key].color,\n          name: this.props.datasets[key].name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        });\n        shownData.push(dataVis);\n      } else {\n        /* eslint-disable no-console */\n        shownData = shownData.filter(function (d) {\n          console.log(d);\n          return data.attr('data-name') !== d.key;\n        });\n      }\n\n      this.setState({\n        shownData: shownData\n      });\n    }\n  }, {\n    key: \"drawLegend\",\n    value: function drawLegend() {\n      var _this2 = this;\n\n      var legend = d3.select(this.groupRef.current);\n      var x = this.xPos;\n      Object.keys(this.props.datasets).forEach(function (key) {\n        var g = legend.append(\"g\").on(\"click\", _this2.onClick.bind(_this2, key));\n        g.attr(\"class\", \"legend\").append(\"circle\").attr(\"cx\", x).attr(\"cy\", _this2.yPos).attr(\"r\", 10).attr(\"fill\", _this2.props.datasets[key].color);\n        g.append(\"text\").attr(\"x\", x + 15).attr(\"y\", _this2.yPos).text(key).attr(\"alignment-baseline\", \"middle\");\n        x += 100;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"g\", {\n        ref: this.groupRef,\n        className: \"TEST\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.state.shownData);\n    }\n  }]);\n\n  return Legend;\n}(Component);\n\nexport default Legend;","map":{"version":3,"sources":["/Users/tamara/Documents/scatterplot/client/src/App/Legend/Legend.js"],"names":["React","Component","d3","DataVisualisation","Legend","props","groupRef","createRef","xPos","yPos","state","shownData","drawLegend","key","group","select","current","data","empty","dataVis","datasets","scalesInstance","color","name","push","filter","d","console","log","attr","setState","legend","x","Object","keys","forEach","g","append","on","onClick","bind","text"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;;IAEMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;AACA,UAAKC,QAAL,GAAgBN,KAAK,CAACO,SAAN,EAAhB;AACA,UAAKC,IAAL,GAAY,EAAZ;AACA,UAAKC,IAAL,GAAY,EAAZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AALiB;AAQlB;;;;wCAEmB;AAClB,WAAKC,UAAL;AACD;AAED;;;;;;4BAGQC,G,EAAK;AACX,UAAMC,KAAK,GAAGZ,EAAE,CAACa,MAAH,CAAU,KAAKT,QAAL,CAAcU,OAAxB,CAAd;AACA,UAAIC,IAAI,GAAGH,KAAK,CAACC,MAAN,qBAA0BF,GAA1B,OAAX;AACA,UAAIF,SAAS,GAAG,KAAKD,KAAL,CAAWC,SAA3B;;AACA,UAAIM,IAAI,CAACC,KAAL,EAAJ,EAAkB;AAChB,YAAMC,OAAO,GAAG,oBAAC,iBAAD;AAAmB,UAAA,GAAG,iBAAUN,GAAV,CAAtB;AAAuC,UAAA,IAAI,EAAE,KAAKR,KAAL,CAAWe,QAAX,CAAoBP,GAApB,EAAyBI,IAAtE;AAChB,UAAA,cAAc,EAAE,KAAKZ,KAAL,CAAWgB,cADX;AAC2B,UAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWe,QAAX,CAAoBP,GAApB,EAAyBS,KAD3D;AAEhB,UAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWe,QAAX,CAAoBP,GAApB,EAAyBU,IAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB;AAIAZ,QAAAA,SAAS,CAACa,IAAV,CAAeL,OAAf;AACD,OAND,MAMO;AACL;AAEAR,QAAAA,SAAS,GAAGA,SAAS,CAACc,MAAV,CAAiB,UAAAC,CAAC,EAAI;AAChCC,UAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,iBAAOT,IAAI,CAACY,IAAL,CAAU,WAAV,MAA2BH,CAAC,CAACb,GAApC;AAAwC,SAF9B,CAAZ;AAGD;;AAED,WAAKiB,QAAL,CAAc;AACZnB,QAAAA,SAAS,EAATA;AADY,OAAd;AAGD;;;iCAEY;AAAA;;AACX,UAAMoB,MAAM,GAAG7B,EAAE,CAACa,MAAH,CAAU,KAAKT,QAAL,CAAcU,OAAxB,CAAf;AACA,UAAIgB,CAAC,GAAG,KAAKxB,IAAb;AAEAyB,MAAAA,MAAM,CAACC,IAAP,CAAY,KAAK7B,KAAL,CAAWe,QAAvB,EAAiCe,OAAjC,CAAyC,UAACtB,GAAD,EAAS;AAChD,YAAMuB,CAAC,GAAGL,MAAM,CAACM,MAAP,MACPC,EADO,UACK,MAAI,CAACC,OAAL,CAAaC,IAAb,CAAkB,MAAlB,EAAwB3B,GAAxB,CADL,CAAV;AAEAuB,QAAAA,CAAC,CAACP,IAAF,oBACGQ,MADH,WAEGR,IAFH,OAEcG,CAFd,EAGGH,IAHH,OAGc,MAAI,CAACpB,IAHnB,EAIGoB,IAJH,MAIa,EAJb,EAKGA,IALH,SAKgB,MAAI,CAACxB,KAAL,CAAWe,QAAX,CAAoBP,GAApB,EAAyBS,KALzC;AAOAc,QAAAA,CAAC,CAACC,MAAF,SACGR,IADH,MACaG,CAAC,GAAG,EADjB,EAEGH,IAFH,MAEa,MAAI,CAACpB,IAFlB,EAGGgC,IAHH,CAGQ5B,GAHR,EAIGgB,IAJH;AAMAG,QAAAA,CAAC,IAAI,GAAL;AACD,OAjBD;AAkBH;;;6BAEU;AACP,aACE;AAAG,QAAA,GAAG,EAAE,KAAK1B,QAAb;AAAuB,QAAA,SAAS,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKI,KAAL,CAAWC,SADd,CADF;AAKD;;;;EAvEkBV,S;;AA2ErB,eAAeG,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport DataVisualisation from \"../DataVisualisation/DataVisualisation\";\n\nclass Legend extends Component {\n  constructor(props) {\n    super(props);\n    this.groupRef = React.createRef();\n    this.xPos = 40;\n    this.yPos = 20;\n    this.state = {\n      shownData: []\n    }\n  }\n\n  componentDidMount() {\n    this.drawLegend();\n  }\n\n  /**\n   * @param {string} key\n   */\n  onClick(key) {\n    const group = d3.select(this.groupRef.current);\n    let data = group.select(`[data-key=${key}]`);\n    let shownData = this.state.shownData;\n    if (data.empty()) {\n      const dataVis = <DataVisualisation key={`data-${key}`} data={this.props.datasets[key].data}\n      scalesInstance={this.props.scalesInstance} color={this.props.datasets[key].color}\n      name={this.props.datasets[key].name} />;\n\n      shownData.push(dataVis);\n    } else {\n      /* eslint-disable no-console */\n\n      shownData = shownData.filter(d => {\n        console.log(d)\n        return data.attr('data-name') !== d.key});\n    }\n\n    this.setState({\n      shownData\n    })\n  }\n\n  drawLegend() {\n    const legend = d3.select(this.groupRef.current);\n    let x = this.xPos;\n\n    Object.keys(this.props.datasets).forEach((key) => {\n      const g = legend.append(`g`)\n        .on(`click`, this.onClick.bind(this, key));\n      g.attr(`class`, `legend`)\n        .append(`circle`)\n        .attr(`cx`, x)\n        .attr(`cy`, this.yPos)\n        .attr(`r`, 10)\n        .attr(`fill`, this.props.datasets[key].color);\n\n      g.append(`text`)\n        .attr(`x`, x + 15)\n        .attr(`y`, this.yPos)\n        .text(key)\n        .attr(`alignment-baseline`,`middle`);\n\n      x += 100;\n    });\n}\n\n  render() {\n    return (\n      <g ref={this.groupRef} className=\"TEST\">\n        {this.state.shownData}\n      </g>\n    );\n  }\n\n}\n\nexport default Legend;"]},"metadata":{},"sourceType":"module"}