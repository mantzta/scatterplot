{"ast":null,"code":"import _classCallCheck from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tamara/Documents/scatterplot/client/src/App/DataVis/DataVis.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nvar DataVis =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataVis, _Component);\n\n  function DataVis() {\n    _classCallCheck(this, DataVis);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DataVis).apply(this, arguments));\n  }\n\n  _createClass(DataVis, [{\n    key: \"getMax\",\n    value: function getMax(dimension, data) {\n      var max = [];\n      Array.from(data).forEach(function (set) {\n        max.push(d3.max(set, function (d) {\n          return d[dimension];\n        }));\n      });\n      return Math.max.apply(Math, max);\n    }\n  }, {\n    key: \"drawCircles\",\n    value: function drawCircles() {\n      var xScale = d3.scaleLinear().domain([0, 100]).range([30, 400]);\n      var yScale = d3.scaleLinear().domain([0, 100]).range([400, 30]);\n      /* eslint-disable no-console */\n\n      console.log(xScale(50));\n\n      if (this.props.data) {\n        d3.select(this.groupEl).selectAll(\"circle\").data(this.props.data).enter().append(\"circle\").attr(\"cx\", function (d) {\n          return xScale(d.x);\n        }).attr(\"cy\", function (d) {\n          return yScale(d.y);\n        }).attr(\"r\", 3).attr(\"fill\", \"aqua\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      this.drawCircles();\n      return React.createElement(\"g\", {\n        ref: function ref(el) {\n          return _this.groupEl = el;\n        },\n        className: \"test\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return DataVis;\n}(Component);\n\nexport default DataVis;","map":{"version":3,"sources":["/Users/tamara/Documents/scatterplot/client/src/App/DataVis/DataVis.js"],"names":["React","Component","d3","DataVis","dimension","data","max","Array","from","forEach","set","push","d","Math","xScale","scaleLinear","domain","range","yScale","console","log","props","select","groupEl","selectAll","enter","append","attr","x","y","drawCircles","el"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;IAEMC,O;;;;;;;;;;;;;2BACGC,S,EAAWC,I,EAAM;AACtB,UAAMC,GAAG,GAAG,EAAZ;AAEAC,MAAAA,KAAK,CAACC,IAAN,CAAWH,IAAX,EAAiBI,OAAjB,CAAyB,UAAAC,GAAG,EAAI;AAC9BJ,QAAAA,GAAG,CAACK,IAAJ,CAAST,EAAE,CAACI,GAAH,CAAOI,GAAP,EAAY,UAASE,CAAT,EAAY;AAAE,iBAAOA,CAAC,CAACR,SAAD,CAAR;AAAsB,SAAhD,CAAT;AACD,OAFD;AAGA,aAAOS,IAAI,CAACP,GAAL,OAAAO,IAAI,EAAQP,GAAR,CAAX;AACD;;;kCAEa;AACZ,UAAIQ,MAAM,GAAGZ,EAAE,CAACa,WAAH,GAAiBC,MAAjB,CAAwB,CAAC,CAAD,EAAG,GAAH,CAAxB,EAAiCC,KAAjC,CAAuC,CAAC,EAAD,EAAK,GAAL,CAAvC,CAAb;AACA,UAAIC,MAAM,GAAGhB,EAAE,CAACa,WAAH,GAAiBC,MAAjB,CAAwB,CAAC,CAAD,EAAG,GAAH,CAAxB,EAAiCC,KAAjC,CAAuC,CAAC,GAAD,EAAM,EAAN,CAAvC,CAAb;AACA;;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAAC,EAAD,CAAlB;;AACA,UAAI,KAAKO,KAAL,CAAWhB,IAAf,EAAqB;AACnBH,QAAAA,EAAE,CAACoB,MAAH,CAAU,KAAKC,OAAf,EACGC,SADH,CACa,QADb,EAEGnB,IAFH,CAEQ,KAAKgB,KAAL,CAAWhB,IAFnB,EAGGoB,KAHH,GAIGC,MAJH,CAIU,QAJV,EAKGC,IALH,CAKQ,IALR,EAKc,UAASf,CAAT,EAAY;AACtB,iBAAOE,MAAM,CAACF,CAAC,CAACgB,CAAH,CAAb;AACD,SAPH,EAQGD,IARH,CAQQ,IARR,EAQc,UAASf,CAAT,EAAY;AACtB,iBAAOM,MAAM,CAACN,CAAC,CAACiB,CAAH,CAAb;AACD,SAVH,EAWGF,IAXH,CAWQ,GAXR,EAWa,CAXb,EAYGA,IAZH,CAYQ,MAZR,EAYgB,MAZhB;AAaD;AACF;;;6BAEQ;AAAA;;AACP,WAAKG,WAAL;AACA,aACE;AAAG,QAAA,GAAG,EAAE,aAAAC,EAAE;AAAA,iBAAI,KAAI,CAACR,OAAL,GAAeQ,EAAnB;AAAA,SAAV;AAAiC,QAAA,SAAS,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EArCmB9B,S;;AAyCtB,eAAeE,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nclass DataVis extends Component {\n  getMax(dimension, data) {\n    const max = []\n\n    Array.from(data).forEach(set => {\n      max.push(d3.max(set, function(d) { return d[dimension]; }))\n    });\n    return Math.max(...max)\n  }\n\n  drawCircles() {\n    var xScale = d3.scaleLinear().domain([0,100]).range([30, 400]);\n    var yScale = d3.scaleLinear().domain([0,100]).range([400, 30]);\n    /* eslint-disable no-console */\n    console.log(xScale(50))\n    if (this.props.data) {\n      d3.select(this.groupEl)\n        .selectAll(\"circle\")\n        .data(this.props.data)\n        .enter()\n        .append(\"circle\")\n        .attr(\"cx\", function(d) {\n          return xScale(d.x);\n        })\n        .attr(\"cy\", function(d) {\n          return yScale(d.y);\n        })\n        .attr(\"r\", 3)\n        .attr(\"fill\", \"aqua\");\n    }\n  }\n\n  render() {\n    this.drawCircles()\n    return (\n      <g ref={el => this.groupEl = el} className=\"test\"></g>\n    );\n  }\n\n}\n\nexport default DataVis;"]},"metadata":{},"sourceType":"module"}