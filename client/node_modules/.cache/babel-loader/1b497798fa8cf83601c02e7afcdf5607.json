{"ast":null,"code":"import _classCallCheck from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tamara/Documents/scatterplot/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tamara/Documents/scatterplot/client/src/App/Axis/Axis.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nvar Axis =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Axis, _Component);\n\n  function Axis(props) {\n    var _this;\n\n    _classCallCheck(this, Axis);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Axis).call(this, props));\n    _this.groupRef = React.createRef();\n    _this.groupEl = _this.groupRef.current;\n    return _this;\n  }\n\n  _createClass(Axis, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.drawAxis();\n    }\n  }, {\n    key: \"drawAxis\",\n    value: function drawAxis() {\n      var axis, xTranslate, yTranslate;\n      var _this$props$config = this.props.config,\n          height = _this$props$config.height,\n          padding = _this$props$config.padding;\n\n      if (this.props.type === \"x\") {\n        axis = d3.axisBottom(this.props.scale);\n        xTranslate = 0;\n        yTranslate = height - padding;\n      } else if (this.props.type === \"y\") {\n        axis = d3.axisLeft(this.props.scale);\n        xTranslate = padding;\n        yTranslate = 0;\n      }\n\n      axis.ticks(5);\n      d3.select(this.groupEl).attr(\"transform\", \"translate(\".concat(xTranslate, \", \").concat(yTranslate, \")\")).call(axis);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"g\", {\n        ref: this.groupRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Axis;\n}(Component);\n\nexport default Axis;","map":{"version":3,"sources":["/Users/tamara/Documents/scatterplot/client/src/App/Axis/Axis.js"],"names":["React","Component","d3","Axis","props","groupRef","createRef","groupEl","current","drawAxis","axis","xTranslate","yTranslate","config","height","padding","type","axisBottom","scale","axisLeft","ticks","select","attr","call"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;IAEMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AACA,UAAKC,QAAL,GAAgBL,KAAK,CAACM,SAAN,EAAhB;AACA,UAAKC,OAAL,GAAe,MAAKF,QAAL,CAAcG,OAA7B;AAHiB;AAIlB;;;;wCAEmB;AAClB,WAAKC,QAAL;AACD;;;+BAEU;AACT,UAAIC,IAAJ,EAAUC,UAAV,EAAsBC,UAAtB;AADS,+BAKL,KAAKR,KAAL,CAAWS,MALN;AAAA,UAGPC,MAHO,sBAGPA,MAHO;AAAA,UAIPC,OAJO,sBAIPA,OAJO;;AAOT,UAAI,KAAKX,KAAL,CAAWY,IAAX,QAAJ,EAA6B;AAC3BN,QAAAA,IAAI,GAAGR,EAAE,CAACe,UAAH,CAAc,KAAKb,KAAL,CAAWc,KAAzB,CAAP;AACAP,QAAAA,UAAU,GAAG,CAAb;AACAC,QAAAA,UAAU,GAAGE,MAAM,GAAGC,OAAtB;AACD,OAJD,MAIO,IAAI,KAAKX,KAAL,CAAWY,IAAX,QAAJ,EAA6B;AAClCN,QAAAA,IAAI,GAAGR,EAAE,CAACiB,QAAH,CAAY,KAAKf,KAAL,CAAWc,KAAvB,CAAP;AACAP,QAAAA,UAAU,GAAGI,OAAb;AACAH,QAAAA,UAAU,GAAG,CAAb;AACD;;AAEDF,MAAAA,IAAI,CAACU,KAAL,CAAW,CAAX;AAEAlB,MAAAA,EAAE,CAACmB,MAAH,CAAU,KAAKd,OAAf,EACGe,IADH,kCACkCX,UADlC,eACiDC,UADjD,QAEGW,IAFH,CAEQb,IAFR;AAGD;;;6BAEQ;AACP,aACE;AAAG,QAAA,GAAG,EAAE,KAAKL,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EAvCgBJ,S;;AA2CnB,eAAeE,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nclass Axis extends Component {\n  constructor(props) {\n    super(props);\n    this.groupRef = React.createRef();\n    this.groupEl = this.groupRef.current;\n  }\n\n  componentDidMount() {\n    this.drawAxis()\n  }\n\n  drawAxis() {\n    let axis, xTranslate, yTranslate\n    const {\n      height,\n      padding\n    } = this.props.config\n\n    if (this.props.type === `x`) {\n      axis = d3.axisBottom(this.props.scale)\n      xTranslate = 0\n      yTranslate = height - padding\n    } else if (this.props.type === `y`) {\n      axis = d3.axisLeft(this.props.scale)\n      xTranslate = padding\n      yTranslate = 0\n    }\n\n    axis.ticks(5);\n\n    d3.select(this.groupEl)\n      .attr(`transform`, `translate(${xTranslate}, ${yTranslate})`)\n      .call(axis);\n  }\n\n  render() {\n    return (\n      <g ref={this.groupRef}></g>\n    );\n  }\n\n}\n\nexport default Axis;"]},"metadata":{},"sourceType":"module"}